TEST(ostream_le, write_u64)
{
    uint8_t buffer[16] = {0};

    lts::ostream_le stream_le(buffer, sizeof(buffer));
    EXPECT_TRUE(stream_le.is_valid());

    EXPECT_TRUE(stream_le.write_u64(0x0706050403020100));
    EXPECT_TRUE(stream_le.write_u64(0x8f8e8d8c8b8a8988));

    EXPECT_EQ(stream_le.tell(), 16);
    EXPECT_EQ(stream_le.tell_bits(), 0);
    ASSERT_NE(stream_le.data(), nullptr);
    const uint8_t* d = stream_le.data();
    uint8_t expected_buffer[] = {
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
        0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f
    };
    EXPECT_EQ(std::memcmp(d, expected_buffer, std::size(expected_buffer)), 0);

    stream_le.set_error_function(
        [](const lts::stream_position& before, const lts::stream_position& after){
            EXPECT_EQ(lts::stream_position(16, 0), before);
            EXPECT_EQ(lts::stream_position(24, 0), after);
        }
    );

    EXPECT_FALSE(stream_le.write_u64(0));

    stream_le.clear_error_function();
    std::cout << (std::string)stream_le << std::endl;
}
