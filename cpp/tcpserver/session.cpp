/* SPDX-License-Identifier: MIT */
/**
 * @file session.cpp
 *
 * @author Lukasz Wiecaszek <lukasz.wiecaszek@gmail.com>
 */

/*===========================================================================*\
 * system header files
\*===========================================================================*/
#include <cstdio>
#include <arpa/inet.h>

/*===========================================================================*\
 * project header files
\*===========================================================================*/
#include "utilities.hpp"
#include "session.hpp"

/*===========================================================================*\
 * 'using namespace' section
\*===========================================================================*/
using namespace lts;

/*===========================================================================*\
 * preprocessor #define constants and macros
\*===========================================================================*/

/*===========================================================================*\
 * local types definitions
\*===========================================================================*/
namespace
{
} // end of anonymous namespace

/*===========================================================================*\
 * local (internal linkage) objects definitions
\*===========================================================================*/

/*===========================================================================*\
 * global (external linkage) objects definitions
\*===========================================================================*/

/*===========================================================================*\
 * local (internal linkage) functions definitions
\*===========================================================================*/

/*===========================================================================*\
 * class public functions definitions
\*===========================================================================*/
session::session(const session_args& args)
: m_state{state_e::uninitialized}
, m_args{args}
{
}

session::~session()
{
    close_sockfd(m_args.sockfd);
}

std::string session::to_string() const
{
    char buf[64];

    snprintf(buf, sizeof(buf), "%s:%d", inet_ntoa(m_args.addr.sin_addr), ntohs(m_args.addr.sin_port));

    return std::string(buf);
}

/*===========================================================================*\
 * class protected functions definitions
\*===========================================================================*/

/*===========================================================================*\
 * class private functions definitions
\*===========================================================================*/

/*===========================================================================*\
 * global (external linkage) functions definitions
\*===========================================================================*/
